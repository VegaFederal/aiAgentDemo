AWSTemplateFormatVersion: '2010-09-09'
Description: Simple web app that will use an Agent in the background to augment requests. Far to be fed through Titan Embeded and consumed by Claude 3.5 Sonnet v2.

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    Description: The deployment environment
  
  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-03de7ad5a4c7c1822
    Description: ID of the existing company VPC
  
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Default: subnet-02615277a84a5fcb4,subnet-005d1ad197eb59c2b
    Description: List of existing subnet IDs for deployment
    
  DocumentsBucketName:
    Type: String
    Default: aiad-docs
    Description: Base name for the S3 bucket that will store documents
    
  LambdaCodeBucket:
    Type: String
    Description: S3 bucket containing Lambda function code packages

Resources:
  # Security Groups Stack
  SecurityGroupsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/security-groups.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Static Website Stack
  StaticWebsiteStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/static-website.yaml
      Parameters:
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Bedrock and Lambda Stack
  BedrockLambdaStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/bedrock-lambda.yaml
      Parameters:
        Environment: !Ref Environment
        DocumentsBucketName: !Sub aiad-docs
        LambdaCodeBucket: !Ref LambdaCodeBucket
      Tags:
        - Key: Environment
          Value: !Ref Environment
        
  # API Gateway Stack for LLM Agent
  ApiGatewayStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: BedrockLambdaStack
    Properties:
      TemplateURL: ./templates/api-gateway.yaml
      Parameters:
        Environment: !Ref Environment
        LlmAgentFunctionArn: !GetAtt BedrockLambdaStack.Outputs.LlmAgentFunctionArn
      Tags:
        - Key: Environment
          Value: !Ref Environment
          
  # API Gateway Stack for Document Processing
  DocProcApiGatewayStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: BedrockLambdaStack
    Properties:
      TemplateURL: ./templates/api-template.yaml
      Parameters:
        Environment: !Ref Environment
        DocumentProcessorFunctionName: !Sub "${AWS::StackName}-document-processor"
        ProcessAllDocumentsFunctionName: !Sub "${AWS::StackName}-process-all-documents"
        DocumentsBucketName: !Sub "${DocumentsBucketName}-${Environment}"
        LambdaCodeBucket: !Ref LambdaCodeBucket
        AIModel: "amazon.titan-embed-text-v1"
        EmbeddingsTable: !Sub "${AWS::StackName}-embeddings-${Environment}"
      Tags:
        - Key: Environment
          Value: !Ref Environment
          
  # CDN Stack
  CdnStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [StaticWebsiteStack, ApiGatewayStack, DocProcApiGatewayStack]
    Properties:
      TemplateURL: ./templates/cdn.yaml
      Parameters:
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment
        WebsiteBucketName: !GetAtt StaticWebsiteStack.Outputs.WebsiteBucketName
        ApiEndpoint: !GetAtt ApiGatewayStack.Outputs.LlmAgentApiEndpoint
      Tags:
        - Key: Environment
          Value: !Ref Environment

Outputs:
  WebsiteBucketName:
    Description: S3 Bucket for website content
    Value: !GetAtt StaticWebsiteStack.Outputs.WebsiteBucketName

  CloudFrontDistributionDomainName:
    Description: CloudFront Distribution Domain Name
    Value: !GetAtt CdnStack.Outputs.CloudFrontDistributionDomainName
    
  WebsiteUrl:
    Description: CloudFront distribution URL for the website
    Value: !GetAtt CdnStack.Outputs.WebsiteUrl

  DistributionId:
    Description: CloudFront distribution ID
    Value: !GetAtt CdnStack.Outputs.DistributionId

  DocumentsBucketName:
    Description: S3 Bucket for document storage
    Value: !GetAtt BedrockLambdaStack.Outputs.DocumentsBucketName

  LlmAgentApiEndpoint:
    Description: API Gateway endpoint URL for LLM Agent
    Value: !GetAtt ApiGatewayStack.Outputs.LlmAgentApiEndpoint
    
  DocumentProcessingApiEndpoint:
    Description: API Gateway endpoint URL for Document Processing
    Value: !GetAtt DocProcApiGatewayStack.Outputs.ApiEndpoint
    
  ProcessAllDocumentsFunctionArn:
    Description: ARN of the process all documents Lambda function
    Value: !GetAtt DocProcApiGatewayStack.Outputs.ProcessAllDocumentsFunctionArn