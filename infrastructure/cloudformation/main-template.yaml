AWSTemplateFormatVersion: '2010-09-09'
Description: Simple web app that will use an Agent in the background to augment requests. Far to be fed through Titan Embeded and consumed by Claude 3.5 Sonnet v2.

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    Description: The deployment environment
  TemplateBucket:
    Type: String
    Description: S3 bucket containing CloudFormation templates
    
  TemplateVersion:
    Type: String
    Description: Version timestamp for template URLs

  VpcId:
    Type: AWS::EC2::VPC::Id
    Default: vpc-03de7ad5a4c7c1822
    Description: ID of the existing company VPC
  
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Default: subnet-02615277a84a5fcb4,subnet-005d1ad197eb59c2b
    Description: List of existing subnet IDs for deployment
    
  DocumentsBucketName:
    Type: String
    Default: aiad-docs
    Description: Base name for the S3 bucket that will store documents
    
  LambdaCodeBucket:
    Type: String
    Description: S3 bucket containing Lambda function code packages

Resources:
  # Security Groups Stack
  SecurityGroupsStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/security-groups.yaml
      Parameters:
        Environment: !Ref Environment
        VpcId: !Ref VpcId
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Static Website Stack
  StaticWebsiteStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./templates/static-website.yaml
      Parameters:
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment
      Tags:
        - Key: Environment
          Value: !Ref Environment

  # Document Processing Stack (combined Bedrock and API Gateway)
  DocumentProcessingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://s3.${AWS::Region}.amazonaws.com/${TemplateBucket}/templates/document-processing.yaml
      Parameters:
        Environment: !Ref Environment
        ParentStackName: !Ref AWS::StackName
        DocumentsBucketName: !Sub "${DocumentsBucketName}-${Environment}"
        LambdaCodeBucket: !Ref LambdaCodeBucket
        AIModel: "amazon.titan-embed-text-v2:0"
        EmbeddingsTableName: !Sub "${AWS::StackName}-embeddings-${Environment}"
      Tags:
        - Key: Environment
          Value: !Ref Environment
        
  # API Gateway Stack for LLM Agent
  ApiGatewayStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: DocumentProcessingStack
    Properties:
      TemplateURL: ./templates/llm-api.yaml
      Parameters:
        Environment: !Ref Environment
        LlmAgentFunctionArn: !GetAtt DocumentProcessingStack.Outputs.LlmAgentFunctionArn
      Tags:
        - Key: Environment
          Value: !Ref Environment
          
  # CDN Stack
  CdnStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: [StaticWebsiteStack, ApiGatewayStack, DocumentProcessingStack]
    Properties:
      TemplateURL: ./templates/cdn.yaml
      Parameters:
        ProjectName: !Ref AWS::StackName
        Environment: !Ref Environment
        WebsiteBucketName: !GetAtt StaticWebsiteStack.Outputs.WebsiteBucketName
        ApiEndpoint: !GetAtt ApiGatewayStack.Outputs.LlmAgentApiEndpoint
        DocProcessingApiEndpoint: !GetAtt DocumentProcessingStack.Outputs.ApiEndpoint
      Tags:
        - Key: Environment
          Value: !Ref Environment

Outputs:
  WebsiteBucketName:
    Description: S3 Bucket for website content
    Value: !GetAtt StaticWebsiteStack.Outputs.WebsiteBucketName

  CloudFrontDistributionDomainName:
    Description: CloudFront Distribution Domain Name
    Value: !GetAtt CdnStack.Outputs.CloudFrontDistributionDomainName
    
  WebsiteUrl:
    Description: CloudFront distribution URL for the website
    Value: !GetAtt CdnStack.Outputs.WebsiteUrl

  DistributionId:
    Description: CloudFront distribution ID
    Value: !GetAtt CdnStack.Outputs.DistributionId

  DocumentsBucketName:
    Description: S3 Bucket for document storage
    Value: !GetAtt DocumentProcessingStack.Outputs.DocumentsBucketName

  LlmAgentApiEndpoint:
    Description: API Gateway endpoint URL for LLM Agent
    Value: !GetAtt ApiGatewayStack.Outputs.LlmAgentApiEndpoint
    
  DocumentProcessingApiEndpoint:
    Description: API Gateway endpoint URL for Document Processing
    Value: !GetAtt DocumentProcessingStack.Outputs.ApiEndpoint
    
  DocumentProcessingCloudFrontUrl:
    Description: CloudFront URL for Document Processing API
    Value: !GetAtt CdnStack.Outputs.DocProcessingApiUrl
    
  ProcessAllDocumentsFunctionArn:
    Description: ARN of the process all documents Lambda function
    Value: !GetAtt DocumentProcessingStack.Outputs.ProcessAllDocumentsFunctionArn
