AWSTemplateFormatVersion: '2010-09-09'
Description: API Gateway for LLM agent and response bucket.

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod
    Description: The deployment environment
  
  LlmAgentFunctionArn:
    Type: String
    Description: ARN of the LLM Agent Lambda function

Resources:
  # S3 Bucket for LLM Agent Results
  LlmResultsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub aiad-results-${Environment}
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET]
            AllowedOrigins: ['*']
            MaxAge: 3600
      # Block public access since we'll use CloudFront
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # S3 Bucket Policy for Public Read Access
  # S3 bucket policy to allow Lambda access
  LlmResultsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref LlmResultsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - 's3:PutObject'
              - 's3:GetObject'
            Resource: !Sub "${LlmResultsBucket.Arn}/*"

  # API Gateway for LLM Agent
  LlmAgentApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub aiad-llm-api-${Environment}
      Description: API for LLM Agent
      EndpointConfiguration:
        Types:
          - REGIONAL

  # API Gateway Resource
  LlmAgentResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref LlmAgentApi
      ParentId: !GetAtt LlmAgentApi.RootResourceId
      PathPart: 'api'

  # Lambda Permission for API Gateway
  LlmAgentPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LlmAgentFunctionArn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${LlmAgentApi}/${Environment}/POST/api
      
  # Add S3 permissions directly to the Lambda function
  LambdaS3AccessPolicyAttachment:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LlmAgentFunctionArn
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt LlmResultsBucket.Arn

  # API Gateway Method
  LlmAgentMethod:
    Type: AWS::ApiGateway::Method
    DependsOn: LlmAgentPermission
    Properties:
      RestApiId: !Ref LlmAgentApi
      ResourceId: !Ref LlmAgentResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LlmAgentFunctionArn}/invocations
        TimeoutInMillis: 3000
      # Add CORS support here
      MethodResponses:
        - StatusCode: '200'
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true

  # API Gateway Deployment
  LlmAgentDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: LlmAgentMethod
    Properties:
      RestApiId: !Ref LlmAgentApi
      Description: "API Deployment"

  # API Gateway Stage with extended timeout
  LlmAgentStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      DeploymentId: !Ref LlmAgentDeployment
      RestApiId: !Ref LlmAgentApi
      StageName: !Ref Environment
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
          MetricsEnabled: true
          DataTraceEnabled: false
          ThrottlingBurstLimit: 10
          ThrottlingRateLimit: 5

Outputs:
  LlmAgentApiEndpoint:
    Description: API Gateway endpoint URL for LLM Agent
    Value: !Sub https://${LlmAgentApi}.execute-api.${AWS::Region}.amazonaws.com/${LlmAgentStage}/api
  
  LlmAgentApiId:
    Description: API Gateway ID
    Value: !Ref LlmAgentApi
    
  LlmResultsBucketName:
    Description: S3 bucket name for LLM agent results
    Value: !Ref LlmResultsBucket